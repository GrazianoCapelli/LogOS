//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxcrafter.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _PROJECTS_LOGOS_WXCRAFTER_BASE_CLASSES_H
#define _PROJECTS_LOGOS_WXCRAFTER_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/frame.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/panel.h>
#include <wx/listctrl.h>
#include <wx/statline.h>
#include <wx/menu.h>
#include <wx/toolbar.h>
#include <wx/statusbr.h>
#include <wx/dialog.h>
#include <wx/stattext.h>
#include <wx/textctrl.h>
#include <wx/calctrl.h>
#include <wx/button.h>
#include <wx/statbox.h>
#include <wx/choice.h>
#include <wx/arrstr.h>
#include <wx/checklst.h>
#include <wx/spinctrl.h>
#include <wx/checkbox.h>
#include <wx/html/htmlwin.h>
#include <wx/statbmp.h>
#include <wx/gauge.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif


class MainFrameBaseClass : public wxFrame
{
protected:
    wxPanel* m_mainPanel;
    wxListCtrl* m_listCtrlPazienti;
    wxStaticLine* m_staticLineBottom;
    wxMenuBar* m_menuBar;
    wxMenu* m_Paziente;
    wxMenuItem* m_menuItemNuovo;
    wxMenuItem* m_menuItemApri;
    wxMenuItem* m_menuItemElimina;
    wxMenuItem* m_menuItemSeparator01;
    wxMenuItem* m_menuItemEsci;
    wxMenu* m_Help;
    wxMenuItem* m_menuItemInformazioni;
    wxToolBar* m_mainToolbar;
    wxStatusBar* m_statusBar;

protected:
    virtual void PazienteSelezionato(wxListEvent& event) { event.Skip(); }
    virtual void PazienteDeselezionato(wxListEvent& event) { event.Skip(); }
    virtual void OnListCtrlRichiestaApertura(wxListEvent& event) { event.Skip(); }
    virtual void NuovoPaziente(wxCommandEvent& event) { event.Skip(); }
    virtual void ApriPaziente(wxCommandEvent& event) { event.Skip(); }
    virtual void EliminaPaziente(wxCommandEvent& event) { event.Skip(); }
    virtual void OnExit(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAbout(wxCommandEvent& event) { event.Skip(); }

public:
    wxListCtrl* GetListCtrlPazienti() { return m_listCtrlPazienti; }
    wxStaticLine* GetStaticLineBottom() { return m_staticLineBottom; }
    wxPanel* GetMainPanel() { return m_mainPanel; }
    wxMenuBar* GetMenuBar() { return m_menuBar; }
    wxToolBar* GetMainToolbar() { return m_mainToolbar; }
    wxStatusBar* GetStatusBar() { return m_statusBar; }
    MainFrameBaseClass(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("LogOS - Archivio pazienti"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(400,400), long style = wxCAPTION|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxSYSTEM_MENU|wxCLOSE_BOX);
    virtual ~MainFrameBaseClass();
};


class DialogNuovoPaziente : public wxDialog
{
protected:
    wxStaticText* m_staticTextNome;
    wxTextCtrl* m_textCtrlNome;
    wxStaticText* m_staticTextCognome;
    wxTextCtrl* m_textCtrlCognome;
    wxStaticText* m_staticTextNatoIl;
    wxCalendarCtrl* m_calendarNatoIl;
    wxStaticLine* m_staticLine50;
    wxStaticText* m_staticTextEsistente;
    wxButton* m_buttonAnnulla;
    wxButton* m_buttonCrea;

protected:
    virtual void PossoCrearlo(wxCommandEvent& event) { event.Skip(); }
    virtual void PossoCrearlo(wxCalendarEvent& event) { event.Skip(); }
    virtual void CreaPaziente(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticTextNome() { return m_staticTextNome; }
    wxTextCtrl* GetTextCtrlNome() { return m_textCtrlNome; }
    wxStaticText* GetStaticTextCognome() { return m_staticTextCognome; }
    wxTextCtrl* GetTextCtrlCognome() { return m_textCtrlCognome; }
    wxStaticText* GetStaticTextNatoIl() { return m_staticTextNatoIl; }
    wxCalendarCtrl* GetCalendarNatoIl() { return m_calendarNatoIl; }
    wxStaticLine* GetStaticLine50() { return m_staticLine50; }
    wxStaticText* GetStaticTextEsistente() { return m_staticTextEsistente; }
    wxButton* GetButtonAnnulla() { return m_buttonAnnulla; }
    wxButton* GetButtonCrea() { return m_buttonCrea; }
    DialogNuovoPaziente(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Nuovo Paziente"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1, -1), long style = wxDEFAULT_DIALOG_STYLE);
    virtual ~DialogNuovoPaziente();
};


class FramePaziente : public wxFrame
{
protected:
    wxMenuBar* m_menuBarPaziente;
    wxMenu* m_menuPaziente;
    wxMenuItem* m_menuItemChiudi;
    wxMenu* m_menuEsercizio;
    wxMenuItem* m_menuItemNuovoEsercizio;
    wxMenuItem* m_menuItemNuovoComePrecedente;
    wxMenuItem* m_menuItemNuovoComeSelezione;
    wxStatusBar* m_statusBarPaziente;
    wxPanel* m_panel270;
    wxStaticText* m_staticTextNome;
    wxTextCtrl* m_textCtrlNome;
    wxStaticText* m_staticTextCognome;
    wxTextCtrl* m_textCtrlCognome;
    wxStaticText* m_staticTextNatoIl;
    wxTextCtrl* m_textCtrlNatoIl;
    wxStaticText* m_staticTextNote;
    wxTextCtrl* m_textCtrlNote;
    wxListCtrl* m_listCtrlReports;
    wxStaticLine* m_staticLine120;

protected:
    virtual void OnChiudiPaziente(wxCommandEvent& event) { event.Skip(); }
    virtual void OnNuovoEsercizio(wxCommandEvent& event) { event.Skip(); }
    virtual void OnNuovoEsercizioComePrecedente(wxCommandEvent& event) { event.Skip(); }
    virtual void OnNuovoEsercizioComeSelezione(wxCommandEvent& event) { event.Skip(); }
    virtual void OnListCtrlReportOpenReport(wxListEvent& event) { event.Skip(); }
    virtual void OnListCtrlReportItemSelected(wxListEvent& event) { event.Skip(); }

public:
    wxMenuBar* GetMenuBarPaziente() { return m_menuBarPaziente; }
    wxStatusBar* GetStatusBarPaziente() { return m_statusBarPaziente; }
    wxStaticText* GetStaticTextNome() { return m_staticTextNome; }
    wxTextCtrl* GetTextCtrlNome() { return m_textCtrlNome; }
    wxStaticText* GetStaticTextCognome() { return m_staticTextCognome; }
    wxTextCtrl* GetTextCtrlCognome() { return m_textCtrlCognome; }
    wxStaticText* GetStaticTextNatoIl() { return m_staticTextNatoIl; }
    wxTextCtrl* GetTextCtrlNatoIl() { return m_textCtrlNatoIl; }
    wxStaticText* GetStaticTextNote() { return m_staticTextNote; }
    wxTextCtrl* GetTextCtrlNote() { return m_textCtrlNote; }
    wxListCtrl* GetListCtrlReports() { return m_listCtrlReports; }
    wxPanel* GetPanel270() { return m_panel270; }
    wxStaticLine* GetStaticLine120() { return m_staticLine120; }
    FramePaziente(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Cartella Paziente"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(920, 600), long style = wxDEFAULT_FRAME_STYLE|wxFRAME_FLOAT_ON_PARENT);
    virtual ~FramePaziente();
};


class DialogNuovoEsercizio : public wxDialog
{
protected:
    wxChoice* m_choiceTipoScheda;
    wxCheckListBox* m_checkListBoxListe;
    wxChoice* m_choiceFiltro1;
    wxTextCtrl* m_textCtrlFiltro1;
    wxChoice* m_choiceFiltro2;
    wxTextCtrl* m_textCtrlFiltro2;
    wxChoice* m_choiceFiltro3;
    wxTextCtrl* m_textCtrlFiltro3;
    wxTextCtrl* m_textTempFlt;
    wxTextCtrl* m_textCtrlAnteprima;
    wxStaticText* m_staticText146;
    wxSpinCtrl* m_spinCtrlDimensioni;
    wxStaticText* m_staticText1462;
    wxChoice* m_choiceMinuscolo;
    wxStaticText* m_staticText1463;
    wxChoice* m_choiceColori;
    wxCheckBox* m_checkBoxSegnalePreavviso;
    wxCheckBox* m_checkBoxMascheramento;
    wxStaticText* m_staticTextNumItems;
    wxSpinCtrl* m_spinCtrlNumItems;
    wxStaticText* m_staticTextSceltiTra;
    wxStaticText* m_staticText14628;
    wxTextCtrl* m_textCtrlTempoEsposizione;
    wxChoice* m_choiceUMEsposizione;
    wxStaticText* m_staticTextRisposta;
    wxChoice* m_choiceRisposta;
    wxStaticLine* m_staticLine92;
    wxStaticText* m_staticTextService;
    wxButton* m_buttonVisualizzaReport;
    wxButton* m_buttonAnnullaEsercizio;
    wxButton* m_buttonAvvia;

protected:
    virtual void PopulateCheckListBoxListe(wxCommandEvent& event) { event.Skip(); }
    virtual void OncheckBoxListeSelected(wxCommandEvent& event) { event.Skip(); }
    virtual void OnChecklistboxlisteToggled(wxCommandEvent& event) { event.Skip(); }
    virtual void OnchoiceFiltro1changed(wxCommandEvent& event) { event.Skip(); }
    virtual void OnTextCtrlFilter1Updated(wxCommandEvent& event) { event.Skip(); }
    virtual void OnchoiceFiltro2changed(wxCommandEvent& event) { event.Skip(); }
    virtual void OnTextCtrlFilter2Updated(wxCommandEvent& event) { event.Skip(); }
    virtual void OnchoiceFiltro3changed(wxCommandEvent& event) { event.Skip(); }
    virtual void OnTextCtrlFilter3Updated(wxCommandEvent& event) { event.Skip(); }
    virtual void OnFontDimensionChanged(wxSpinEvent& event) { event.Skip(); }
    virtual void OnChoiceMinuscoloChanged(wxCommandEvent& event) { event.Skip(); }
    virtual void OnChoiceColoriChanged(wxCommandEvent& event) { event.Skip(); }
    virtual void OnNumItemChanged(wxSpinEvent& event) { event.Skip(); }
    virtual void OnTempoEsposizioneUpdated(wxCommandEvent& event) { event.Skip(); }
    virtual void OnVisualizzaReportClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAnnullaEsercizio(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAvviaClicked(wxCommandEvent& event) { event.Skip(); }

public:
    wxChoice* GetChoiceTipoScheda() { return m_choiceTipoScheda; }
    wxCheckListBox* GetCheckListBoxListe() { return m_checkListBoxListe; }
    wxChoice* GetChoiceFiltro1() { return m_choiceFiltro1; }
    wxTextCtrl* GetTextCtrlFiltro1() { return m_textCtrlFiltro1; }
    wxChoice* GetChoiceFiltro2() { return m_choiceFiltro2; }
    wxTextCtrl* GetTextCtrlFiltro2() { return m_textCtrlFiltro2; }
    wxChoice* GetChoiceFiltro3() { return m_choiceFiltro3; }
    wxTextCtrl* GetTextCtrlFiltro3() { return m_textCtrlFiltro3; }
    wxTextCtrl* GetTextTempFlt() { return m_textTempFlt; }
    wxTextCtrl* GetTextCtrlAnteprima() { return m_textCtrlAnteprima; }
    wxStaticText* GetStaticText146() { return m_staticText146; }
    wxSpinCtrl* GetSpinCtrlDimensioni() { return m_spinCtrlDimensioni; }
    wxStaticText* GetStaticText1462() { return m_staticText1462; }
    wxChoice* GetChoiceMinuscolo() { return m_choiceMinuscolo; }
    wxStaticText* GetStaticText1463() { return m_staticText1463; }
    wxChoice* GetChoiceColori() { return m_choiceColori; }
    wxCheckBox* GetCheckBoxSegnalePreavviso() { return m_checkBoxSegnalePreavviso; }
    wxCheckBox* GetCheckBoxMascheramento() { return m_checkBoxMascheramento; }
    wxStaticText* GetStaticTextNumItems() { return m_staticTextNumItems; }
    wxSpinCtrl* GetSpinCtrlNumItems() { return m_spinCtrlNumItems; }
    wxStaticText* GetStaticTextSceltiTra() { return m_staticTextSceltiTra; }
    wxStaticText* GetStaticText14628() { return m_staticText14628; }
    wxTextCtrl* GetTextCtrlTempoEsposizione() { return m_textCtrlTempoEsposizione; }
    wxChoice* GetChoiceUMEsposizione() { return m_choiceUMEsposizione; }
    wxStaticText* GetStaticTextRisposta() { return m_staticTextRisposta; }
    wxChoice* GetChoiceRisposta() { return m_choiceRisposta; }
    wxStaticLine* GetStaticLine92() { return m_staticLine92; }
    wxStaticText* GetStaticTextService() { return m_staticTextService; }
    wxButton* GetButtonVisualizzaReport() { return m_buttonVisualizzaReport; }
    wxButton* GetButtonAnnullaEsercizio() { return m_buttonAnnullaEsercizio; }
    wxButton* GetButtonAvvia() { return m_buttonAvvia; }
    DialogNuovoEsercizio(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Nuovo Esercizio"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE);
    virtual ~DialogNuovoEsercizio();
};


class FrameReport : public wxFrame
{
protected:
    wxPanel* m_panel277;
    wxHtmlWindow* m_htmlWinReport;
    wxStaticLine* m_staticLine243;
    wxStaticText* m_staticTextService;
    wxButton* m_buttonClose;

protected:
    virtual void OnCloseClicked(wxCommandEvent& event) { event.Skip(); }

public:
    wxHtmlWindow* GetHtmlWinReport() { return m_htmlWinReport; }
    wxStaticLine* GetStaticLine243() { return m_staticLine243; }
    wxStaticText* GetStaticTextService() { return m_staticTextService; }
    wxButton* GetButtonClose() { return m_buttonClose; }
    wxPanel* GetPanel277() { return m_panel277; }
    FrameReport(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Report"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(600,700), long style = wxDEFAULT_FRAME_STYLE);
    virtual ~FrameReport();
};


class FrameProiettore : public wxFrame
{
protected:
    wxPanel* m_panelProjector;
    wxStaticBitmap* m_staticBitmapEmoticon;
    wxStaticText* m_staticTextMessage;
    wxStaticText* m_staticTextItem;
    wxPanel* m_panelItemCheck;
    wxTextCtrl* m_textCtrlItemCheck;
    wxPanel* m_panel279;
    wxGauge* m_gaugeAvanzamento;
    wxStaticText* m_staticTextInfo;
    wxStaticText* m_staticTextHint;
    wxButton* m_buttonNo;
    wxButton* m_buttonYes;
    wxButton* m_buttonAvanti;
    wxButton* m_buttonTermina;

protected:
    virtual void OnTextCtrlItemCheckTextEnter(wxCommandEvent& event) { event.Skip(); }
    virtual void OnNoClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnYesClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAvantiClicked(wxCommandEvent& event) { event.Skip(); }
    virtual void OnButtonterminaLeftUp(wxMouseEvent& event) { event.Skip(); }

public:
    wxStaticBitmap* GetStaticBitmapEmoticon() { return m_staticBitmapEmoticon; }
    wxStaticText* GetStaticTextMessage() { return m_staticTextMessage; }
    wxStaticText* GetStaticTextItem() { return m_staticTextItem; }
    wxTextCtrl* GetTextCtrlItemCheck() { return m_textCtrlItemCheck; }
    wxPanel* GetPanelItemCheck() { return m_panelItemCheck; }
    wxPanel* GetPanelProjector() { return m_panelProjector; }
    wxGauge* GetGaugeAvanzamento() { return m_gaugeAvanzamento; }
    wxStaticText* GetStaticTextInfo() { return m_staticTextInfo; }
    wxStaticText* GetStaticTextHint() { return m_staticTextHint; }
    wxButton* GetButtonNo() { return m_buttonNo; }
    wxButton* GetButtonYes() { return m_buttonYes; }
    wxButton* GetButtonAvanti() { return m_buttonAvanti; }
    wxButton* GetButtonTermina() { return m_buttonTermina; }
    wxPanel* GetPanel279() { return m_panel279; }
    FrameProiettore(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Proiettore"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(800,500), long style = wxDEFAULT_FRAME_STYLE);
    virtual ~FrameProiettore();
};

#endif
